module.exports = function(grunt){
	grunt.initConfig({
		pkg: grunt.file.readJSON('package.json'),

		clean: {
			dist: ['dist/']
		},

		copy: {
			bootstrapCss: {
				files: [
					{
						src: 'bower_components/bootstrap-css-only/css/bootstrap.min.css',
						dest: 'dist/styles/bootstrap.min.css'
					},
					{
						src: 'bower_components/bootstrap-css-only/css/bootstrap.css.map',
						dest: 'dist/styles/bootstrap.css.map'
					},
					{
						expand: true,
						cwd: 'bower_components/bootstrap-css-only/fonts/',
						src: ['**'],
						dest: 'dist/fonts/'
					},
				]
			},

			midnightAssets: {
				files: [
					{
						expand: true,
						cwd: 'assets/',
						src: ['**/*.*'],
						dest: 'dist/assets/'
					}
				]
			},

			styles: {
				files: [
					{
						expand: true,
						cwd: 'src/styles/',
						src: ['**/*.css'],
						dest: 'dist/styles/'
					}
				]
			},

			vendorScripts: {
				files: [
					{
						src: 'bower_components/mathjs/dist/math.js', 
						dest: 'dist/scripts/vendor/math.js'
					},
					{
						src: 'bower_components/jquery/dist/jquery.js', 
						dest: 'dist/scripts/vendor/jquery.js'
					},

					{
						src: 'bower_components/angular/angular.js', 
						dest: 'dist/scripts/vendor/angular.js'
					},
				  	
				  	{
				  		src: 'bower_components/angular-bootstrap/ui-bootstrap-tpls.js',
				  		dest: 'dist/scripts/vendor/ui-bootstrap-tpls.js'
					},

					{
						src: 'heatmap.js-2.0/build/heatmap.js',
						dest: 'dist/scripts/vendor/heatmap.js'
					},

					{
						src: 'smoothjs/smooth.js',
						dest: 'dist/scripts/vendor/smooth.js'
					},

					{
						src: 'midnight.jquery.min.js',
						dest: 'dist/midnight.jquery.min.js'
					}
				]
			},

			scripts: {
				files: [{
					expand: true,
					cwd: 'src/ngapp/',
					src: ['**/*.js'],
					dest: 'dist/scripts/'
				}]
			},

			landingPage: {
				files: [
					{
						src: 'src/index.html',
						dest: 'dist/index.html'
					}
				]
			}
		},

		useminPrepare: {
			html: 'src/index.html',
			options: {
				root: 'dist/',
				dest: 'dist/'
			}
		},

		usemin: {
			html: 'dist/index.html'
		},

		jshint: {
			files: ['gruntfile.js', 'src/**/*.js']
		},

		watch: {
			lint: {
				files: ['<%= jshint.files %>'],
				tasks: ['jshint']
			},

			scripts: {
				files: ['<%= copy.scripts.files[0].cwd + copy.scripts.files[0].src[0] %>'],
				tasks: ['copy:scripts']
			},

			styles: {
				files: ['<%= copy.styles.files[0].cwd + copy.styles.files[0].src[0] %>'],
				tasks: ['copy:styles']
			},
		}
	});

	grunt.loadNpmTasks('grunt-contrib-clean');
	grunt.loadNpmTasks('grunt-contrib-concat');
	grunt.loadNpmTasks('grunt-contrib-copy');
	grunt.loadNpmTasks('grunt-contrib-cssmin');
	grunt.loadNpmTasks('grunt-contrib-uglify');
	grunt.loadNpmTasks('grunt-contrib-jshint');
	grunt.loadNpmTasks('grunt-contrib-watch');
	grunt.loadNpmTasks('grunt-usemin');

	grunt.registerTask('build:dev', [
		'jshint',
		'clean', 
		'copy'
	]);

	grunt.registerTask('build:prod', [
		'jshint',
		'clean', 
		'copy',
		'useminPrepare', 
		'concat:generated', // generated by usemin
		'uglify:generated', // generated by usemin
		'cssmin:generated', // generated by usemin
		'usemin'
	]);

	grunt.registerTask('default', ['build:dev']);
};
